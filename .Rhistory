else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
z[2]<-1
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
View(mat)
mat[1,]
vec2bin<-function(x)
{
newx<-0
d<-length(x)
for(i in seq(d))
{
newx <- newx+x[i]*2^(d-i)
}
return(newx)
}
VecAlignment<-function(mat)
{
# mat must have the dimension n by d where n and d must be greater than 1.
newMat<-list()
d<-dim(mat)[1]
for(i in seq(d))
{
newMat[[sprintf("%d",vec2bin(mat[i,]))]]$name<-mat[i,]
if(is.null(newMat[[sprintf("%d",vec2bin(mat[i,]))]]$count)==TRUE )
newMat[[sprintf("%d",vec2bin(mat[i,]))]]$count<-1
else
newMat[[sprintf("%d",vec2bin(mat[i,]))]]$count<-newMat[[sprintf("%d",vec2bin(mat[i,]))]]$count+1
}
return(newMat)
}
n<-500
d<-4
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.2)
}
mat[,1]<-mat[,2] | mat[,3]
D<-VecAlignment(mat)
View(mat)
z<-numeric(d)-1
y<-numeric(d)-1
z[2]<-1
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
z[2]<-3
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
z[3]<-1
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
z[1]<-1
y[3]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
z[1]<-1
y[2]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
z[3]<-1
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
z[2:3]<-1
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
#z[2:3]<-1
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
#z[2:3]<-1
y[1:2]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
#z[2:3]<-1
y[1:2]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
z<-numeric(d)-1
y<-numeric(d)-1
#z[2:3]<-1
y[1]<-1
CondProb<-function(D,y,z)
{
p<-0
filter<-z != -1
if(sum(filter) == 0)
nD<-D
else
{
nD<-list()
for(i in seq(length(D)) )
{
flag<-sum(D[[i]]$name[filter] == z[filter])
if(flag == sum(filter))
{
nD[[names(D)[i] ]] <- D[[i]]
}
}
}
filterY<- y!= -1
count<-0
countTotal<-0
for(i in seq(length(nD)) )
{
flag<-sum(nD[[i]]$name[filterY] == y[filterY])
countTotal<-countTotal+nD[[i]]$count
if(flag == sum(filterY))
{
count<-count+nD[[i]]$count
}
}
return(count/countTotal)
}
CondProb(D,y,z)
CondProb(D,y=c(1,1,-1,-1),z) -CondProb(D,y=c(1,-1,-1,-1),z)*CondProb(D,y=c(-1,1,-1,-1),z)
CondProb(D,y=c(-1,1,1,-1),z) -CondProb(D,y=c(-1,1,-1,-1),z)*CondProb(D,y=c(-1,-1,1,-1),z)
CondProb(D,y=c(-1,1,-1,1),z) -CondProb(D,y=c(-1,1,-1,-1),z)*CondProb(D,y=c(-1,-1,-1,1),z)
CondProb(D,y=c(1,-1,1,-1),z) -CondProb(D,y=c(1,-1,-1,-1),z)*CondProb(D,y=c(-1,-1,1,-1),z)
