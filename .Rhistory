mat[,4] <-mat[,2] | mat[,5]
res<-confNetFunc(mat=mat,IndpThs=0.9)
res$confNet
res$confValMat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1> IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
res<-confNetFunc(mat=mat,IndpThs=1)
res$confNet
res$confValMat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1> IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
res<-confNetFunc(mat=mat,IndpThs=0.99)
res$confNet
res$confValMat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
res<-confNetFunc(mat=mat,IndpThs=1)
res$confNet
res$confValMat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1]
res<-confNetFunc(mat=mat,IndpThs=1)
res$confNet
res$confValMat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=1)
res$confNet
res$confValMat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=1)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat)
resC$CausalGRes$Ehat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=1)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat,CausalThs=0.15)
resC$CausalGRes$Ehat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=1)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat,CausalThs=0.1)
resC$CausalGRes$Ehat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=0.9)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat,CausalThs=0.1)
resC$CausalGRes$Ehat
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=0.9)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat,CausalThs=0.1)
resC$CausalGRes$Ehat
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.25)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=0.9)
library(devtools)
devtools::document()
library(BiCausality)
confNetFunc<-function(mat,IndpThs=0.1)
{
d<-dim(mat)[2]
confNet<-matrix(0,nrow=d,ncol=d)
D<-VecAlignment(mat)
confValMat<-matrix(0,nrow=d,ncol=d)
#===
for(i in seq(d-1))
for(j in seq(i+1,d))
{
z<-numeric(d)-1
y<-numeric(d)-1
y[j]<-c(1)
z[i]<-c(1)
a1<-CondProb(D,y=y,z=z)$condP # conf(y|z)
b1<-CondProb(D,y=z,z=y)$condP # conf(z|y)
confValMat[i,j]<-a1
confValMat[j,i]<-b1
if((a1-b1)>0 && a1>=IndpThs)
confNet[i,j]<-1
else if((b1-a1)>0 && b1>= IndpThs)
confNet[j,i]<-1
else
confNet[i,j]<-0
}
return(list(confNet=confNet,confValMat=confValMat) )
}
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.5)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=0.9)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat,CausalThs=0.1)
resC$CausalGRes$Ehat
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.25)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=0.9)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat,CausalThs=0.1)
resC$CausalGRes$Ehat
n<-500
d<-10
mat<-matrix(nrow=n,ncol=d)
for(i in seq(n))
{
mat[i,] <- rbinom(n=d, size=1, prob=0.1)
}
mat[,1]<-mat[,2] | mat[,3]
mat[,4] <-mat[,2] | mat[,5]
mat[,6] <- mat[,1] | mat[,4]
res<-confNetFunc(mat=mat,IndpThs=0.9)
res$confNet
res$confValMat
resC<-BiCausality::CausalGraphInferMainFunc(mat = mat,CausalThs=0.1)
resC$CausalGRes$Ehat
load("~/Documents/GitHub/BiCausality/res40final.rdata")
res40final$CausalGRes$Ehat
sum(res40final$CausalGRes$Ehat)
load("~/Documents/GitHub/BiCausality/res50Final.Rdata")
sum(res50final$CausalGRes$Ehat)
