j=2
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0, alternative = "two.sided")
bIndpDist
wilcox.test(x=bIndpDist, mu = 0.01, alternative = "two.sided")
wilcox.test(x=bIndpDist, mu = 0.01, alternative = "less")
wilcox.test(x=bIndpDist, mu = 0.01, alternative = "greater")
i=3
j=2
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.01, alternative = "greater")
bIndpDist
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
i=3
j=2
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
i=1
j=2
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
i=1
j=3
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
i=2
j=3
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
i=2
j=5
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
i=4
j=5
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
i=4
j=1
z<-numeric(d)-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
bIndpDist
i=4
j=1
z<-numeric(d)-1
z[2]<-1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
quantile(bIndpDist, c(.025, .57, .975))
quantile(bIndpDist, c(.025, .975))
quantile(bIndpDist, probs =c(.025, .975))
?quantile
bIndpDist
i=4
j=1
z<-numeric(d)-1
#z[2]<- -1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
quantile(bIndpDist, c(.025, .975))
alpha=0.05
i=4
j=1
z<-numeric(d)-1
#z[2]<- -1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = 0.05, alternative = "greater")
quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
alpha=0.05
ths = 0.05
i=4
j=1
z<-numeric(d)-1
#z[2]<- -1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
alpha=0.05
ths = 0.05
i=4
j=2
z<-numeric(d)-1
#z[2]<- -1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
alpha=0.05
ths = 0.05
i=4
j=1
z<-numeric(d)-1
#z[2]<- -1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
alpha=0.05
ths = 0.05
i=4
j=1
z<-numeric(d)-1
#z[2]<- -1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
quantile(bIndpDist, c(0+alpha/2,0.5, 1-alpha/2))
wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
res<-wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
res
res$p.value
alpha=0.05
ths = 0.05
i=2
j=1
z<-numeric(d)-1
#z[2]<- -1
nboot=100
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
confInv<-quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
bmean <- mean(bIndpDist)
bIndpTest<-function(mat,i,j,z=c(),alpha=0.05,ths = 0.05,nboot=100)
{
if(is.null(z))
z<-numeric(d)-1
#z[2]<- -1
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
print(k)
}
testRes<-wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
confInv<-quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
bmean <- mean(bIndpDist)
return(list(testRes=testRes,confInv=confInv,bmean=bmean))
}
res<-bIndpTest(mat,i=2,j=1)
res
bIndpTest<-function(mat,i,j,z=c(),alpha=0.05,ths = 0.05,nboot=100)
{
if(is.null(z))
z<-numeric(d)-1
#z[2]<- -1
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
}
testRes<-wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
confInv<-quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
bmean <- mean(bIndpDist)
return(list(testRes=testRes,confInv=confInv,bmean=bmean))
}
res<-bIndpTest(mat,i=2,j=1)
res
bIndpTest<-function(mat,i,j,z=c(),alpha=0.05,ths = 0.05,nboot=100)
{
if(is.null(z))
z<-numeric(d)-1
#z[2]<- -1
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
}
testRes<-wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
confInv<-quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
bmean <- mean(bIndpDist)
return(list(testRes=testRes,confInv=confInv,bmean=bmean))
}
bIndpTest(mat,i=2,j=1)
bIndpTest<-function(mat,i,j,z=c(),alpha=0.05,ths = 0.05,nboot=100)
{
if(is.null(z))
z<-numeric(d)-1
#z[2]<- -1
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
}
testRes<-wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
confInv<-quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
bmean <- mean(bIndpDist)
return(list(testRes=testRes,confInv=confInv,bmean=bmean))
}
i=2
j=1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=2
j=4
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=2
j=3
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=4
j=1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=4
j=1
z<-numeric(d)-1
z[2]<-1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
bIndpTest<-function(mat,i,j,z=c(),alpha=0.05,ths = 0.05,nboot=100)
{
if(is.null(z))
z<-numeric(d)-1
#z[2]<- -1
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
}
testRes<-wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
confInv<-quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
bmean <- mean(bIndpDist)
return(list(testRes=testRes,confInv=confInv,bmean=bmean))
}
i=2
j=1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=2
j=4
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=2
j=3
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=4
j=1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=4
j=1
z<-numeric(d)-1
z[2]<-1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j,z=z)
bIndpTest<-function(mat,i,j,z=c(),alpha=0.05,ths = 0.05,nboot=100)
{
if(is.null(z))
z<-numeric(d)-1
#z[2]<- -1
n<-dim(mat)[1]
bDx<-matrix(0,nboot,n)
bIndpDist<-numeric(nboot)
for(k in seq(nboot))
{
bDx[k,]<-sample(1:n,length(1:n),replace = TRUE)
nMat<-mat[bDx[k,],]
D<-VecAlignment(nMat)
bIndpDist[k]<-indpFunc(D,i,j,z=z)
}
testRes<-wilcox.test(x=bIndpDist, mu = ths, alternative = "greater")
confInv<-quantile(bIndpDist, c(0+alpha/2, 1-alpha/2))
bmean <- mean(bIndpDist)
return(list(testRes=testRes,confInv=confInv,bmean=bmean))
}
i=2
j=1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=2
j=4
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=2
j=3
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=4
j=1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j)
i=4
j=1
z<-numeric(d)-1
z[2]<-1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j,z=z)
i=2
j=3
z<-numeric(d)-1
z[1]<-1
print(sprintf("i%d,j%d",i,j))
bIndpTest(mat,i,j,z=z)
